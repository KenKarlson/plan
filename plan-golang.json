[
  {
    "day": "1",
    "theme": "Установка Go и настройка среды разработки",
    "task": "Установить Go, проверить версию, создать первый Hello World",
    "resources": "<a href='https://go.dev/dl/' target='_blank'>Официальная установка Go</a>",
    "example": "package main\nimport \"fmt\"\nfunc main() {\n    fmt.Println(\"Hello, World!\")\n}"
  },
  {
    "day": "2",
    "theme": "Переменные и типы данных",
    "task": "Изучить var, :=, базовые типы (int, string, bool)",
    "resources": "<a href='https://go.dev/ref/spec#Variables' target='_blank'>Go переменные</a>",
    "example": "var a int = 42\nb := \"text\""
  },
  {
    "day": "3",
    "theme": "Константы и операторы",
    "task": "Работа с const, арифметические и логические операции",
    "resources": "<a href='https://go.dev/ref/spec#Constants' target='_blank'>Go константы</a>",
    "example": "const Pi = 3.14\nresult := 5 + 3"
  },
  {
    "day": "4",
    "theme": "Условия if/else",
    "task": "Использовать условия в Go",
    "resources": "<a href='https://go.dev/ref/spec#If_statements' target='_blank'>Go условия</a>",
    "example": "if age > 18 {\n    fmt.Println(\"Adult\")\n} else {\n    fmt.Println(\"Minor\")\n}"
  },
  {
    "day": "5",
    "theme": "Циклы for",
    "task": "Изучить цикл for, классический и условный",
    "resources": "<a href='https://go.dev/ref/spec#For_statements' target='_blank'>Go циклы</a>",
    "example": "for i := 0; i < 10; i++ { fmt.Println(i) }"
  },
  {
    "day": "6",
    "theme": "Массивы и срезы",
    "task": "Создавать и использовать массивы и срезы",
    "resources": "<a href='https://go.dev/ref/spec#Array_types' target='_blank'>Массивы</a>, <a href='https://go.dev/ref/spec#Slice_types' target='_blank'>Срезы</a>",
    "example": "arr := [3]int{1, 2, 3}\nslice := []int{1, 2, 3}"
  },
  {
    "day": "7",
    "theme": "Карты (map)",
    "task": "Использовать map для хранения пар ключ-значение",
    "resources": "<a href='https://go.dev/ref/spec#Map_types' target='_blank'>Go maps</a>",
    "example": "user := map[string]string{\n    \"name\": \"Alice\",\n    \"role\": \"dev\",\n}"
  },
  {
    "day": "8",
    "theme": "Функции",
    "task": "Создание и вызов функций",
    "resources": "<a href='https://go.dev/ref/spec#Function_declarations' target='_blank'>Функции в Go</a>",
    "example": "func add(a, b int) int {\n    return a + b\n}"
  },
  {
    "day": "9",
    "theme": "Множественный возврат из функций",
    "task": "Использовать несколько возвращаемых значений",
    "resources": "<a href='https://go.dev/ref/spec#Return_statements' target='_blank'>Return в Go</a>",
    "example": "func divide(a, b float64) (float64, error) {\n    if b == 0 {\n        return 0, errors.New(\"division by zero\")\n    }\n    return a / b, nil\n}"
  },
  {
    "day": "10",
    "theme": "Указатели",
    "task": "Изучить работу с указателями",
    "resources": "<a href='https://go.dev/ref/spec#Address_operators' target='_blank'>Pointers в Go</a>",
    "example": "func increment(x *int) {\n    *x++\n}\nnum := 5\nincrement(&num)"
  },
  {
    "day": "11",
    "theme": "Structs — пользовательские типы",
    "task": "Создавать структуры и работать с ними",
    "resources": "<a href='https://go.dev/ref/spec#Struct_types' target='_blank'>Structs в Go</a>",
    "example": "type User struct {\n    Name string\n    Age  int\n}\nu := User{Name: \"Alice\", Age: 30}"
  },
  {
    "day": "12",
    "theme": "Методы",
    "task": "Создавать методы для структур",
    "resources": "<a href='https://go.dev/tour/methods/1' target='_blank'>Go Tour - Methods</a>",
    "example": "func (u User) Greet() {\n    fmt.Println(\"Hi, \", u.Name)\n}"
  },
  {
    "day": "13",
    "theme": "Интерфейсы",
    "task": "Изучить работу с интерфейсами",
    "resources": "<a href='https://go.dev/tour/methods/9' target='_blank'>Interfaces в Go</a>",
    "example": "type Shape interface {\n    Area() float64\n}"
  },
  {
    "day": "14",
    "theme": "Packages и импорт",
    "task": "Работать с пакетами, создать свой пакет",
    "resources": "<a href='https://go.dev/tour/basics/1' target='_blank'>Packages в Go</a>",
    "example": "package math\nfunc Add(a, b int) int {\n    return a + b\n}"
  },
  {
    "day": "15",
    "theme": "Error Handling",
    "task": "Изучить обработку ошибок через error",
    "resources": "<a href='https://go.dev/blog/error-handling-and-go' target='_blank'>Error handling</a>",
    "example": "if err != nil {\n    log.Fatal(err)\n}"
  },
  {
    "day": "16",
    "theme": "Strings и работа с текстом",
    "task": "Изучить строки, их методы и форматирование",
    "resources": "<a href='https://pkg.go.dev/strings' target='_blank'>Пакет strings</a>",
    "example": "s := \"hello world\"\nupper := strings.ToUpper(s)"
  },
  {
    "day": "17",
    "theme": "Работа с файлами",
    "task": "Чтение и запись файлов в Go",
    "resources": "<a href='https://pkg.go.dev/os' target='_blank'>os.File</a>",
    "example": "file, _ := os.Create(\"test.txt\")\nfile.WriteString(\"content\")"
  },
  {
    "day": "18",
    "theme": "Работа с директориями и путями",
    "task": "Создание, удаление, чтение директорий",
    "resources": "<a href='https://pkg.go.dev/os#ReadDir' target='_blank'>os.ReadDir</a>",
    "example": "dirs, _ := os.ReadDir(\".\")"
  },
  {
    "day": "19",
    "theme": "JSON и работа с данными",
    "task": "Кодировать и декодировать JSON",
    "resources": "<a href='https://pkg.go.dev/encoding/json' target='_blank'>JSON в Go</a>",
    "example": "data, _ := json.Marshal(user)"
  },
  {
    "day": "20",
    "theme": "Time и дата",
    "task": "Работать с датой и временем",
    "resources": "<a href='https://pkg.go.dev/time' target='_blank'>Time в Go</a>",
    "example": "now := time.Now()\nfmt.Println(now.Format(time.RFC3339))"
  },
  {
    "day": "21",
    "theme": "Работа с регулярными выражениями",
    "task": "Использовать regexp для поиска и замены",
    "resources": "<a href='https://pkg.go.dev/regexp' target='_blank'>Regexp в Go</a>",
    "example": "re := regexp.MustCompile(`\\d+`)"
  },
  {
    "day": "22",
    "theme": "Работа с флагами командной строки",
    "task": "Создавать CLI-приложения с флагами",
    "resources": "<a href='https://pkg.go.dev/flag' target='_blank'>flag package</a>",
    "example": "port := flag.Int(\"port\", 8080, \"server port\")"
  },
  {
    "day": "23",
    "theme": "Testing и тестирование кода",
    "task": "Писать unit-тесты на Go",
    "resources": "<a href='https://pkg.go.dev/testing' target='_blank'>Testing в Go</a>",
    "example": "func TestAdd(t *testing.T) { ... }"
  },
  {
    "day": "24",
    "theme": "Benchmarking",
    "task": "Проводить бенчмаркинг кода",
    "resources": "<a href='https://pkg.go.dev/testing#hdr-Benchmarks' target='_blank'>Benchmarks</a>",
    "example": "func BenchmarkAdd(b *testing.B) { ... }"
  },
  {
    "day": "25",
    "theme": "Работа с HTTP клиентом",
    "task": "Делать GET-запросы и обрабатывать ответы",
    "resources": "<a href='https://pkg.go.dev/net/http' target='_blank'>net/http</a>",
    "example": "res, _ := http.Get(\"https://api.example.com/data\")"
  },
  {
    "day": "26",
    "theme": "HTTP сервер",
    "task": "Создать простой веб-сервер",
    "resources": "<a href='https://pkg.go.dev/net/http#ListenAndServe' target='_blank'>HTTP сервер</a>",
    "example": "http.HandleFunc(\"/\", func(w http.ResponseWriter, r *http.Request) { fmt.Fprintf(w, \"Hello\") })\nhttp.ListenAndServe(\":8080\", nil)"
  },
  {
    "day": "27",
    "theme": "Middleware и маршрутизация",
    "task": "Добавлять middleware и маршруты",
    "resources": "<a href='https://github.com/go-chi/chi' target='_blank'>Chi router</a>",
    "example": "r.Use(middleware.Logger)\nr.Get(\"/users/{id}\", userHandler)"
  },
  {
    "day": "28",
    "theme": "Работа с базами данных",
    "task": "Подключаться к SQL-базам, выполнять запросы",
    "resources": "<a href='https://pkg.go.dev/database/sql' target='_blank'>database/sql</a>",
    "example": "db, _ := sql.Open(\"mysql\", \"user:pass@tcp(localhost:3306)/dbname\")"
  },
  {
    "day": "29",
    "theme": "CRUD с БД",
    "task": "Выполнять INSERT, SELECT, UPDATE, DELETE",
    "resources": "<a href='https://jmoiron.github.io/sqlx/' target='_blank'>sqlx</a>",
    "example": "var name string\ndb.QueryRow(\"SELECT name FROM users WHERE id=1\").Scan(&name)"
  },
  {
    "day": "30",
    "theme": "Мини-проект: API сервер",
    "task": "Создать простой REST API сервер",
    "resources": "-",
    "example": "-"
  },
  {
    "day": "31",
    "theme": "Concurrency и горутины",
    "task": "Запускать задачи параллельно через go",
    "resources": "<a href='https://go.dev/tour/concurrency/1' target='_blank'>Goroutines</a>",
    "example": "go doSomething()\ngo doAnother()"
  },
  {
    "day": "32",
    "theme": "Каналы (channels)",
    "task": "Обмениваться данными между горутинами",
    "resources": "<a href='https://go.dev/tour/concurrency/2' target='_blank'>Channels</a>",
    "example": "ch := make(chan string)\nch <- \"message\"\nmsg := <-ch"
  },
  {
    "day": "33",
    "theme": "WaitGroup и управление горутинами",
    "task": "Ждать завершения всех горутин",
    "resources": "<a href='https://pkg.go.dev/sync#WaitGroup' target='_blank'>sync.WaitGroup</a>",
    "example": "var wg sync.WaitGroup\nwg.Add(1)\ngo func() { defer wg.Done(); ... }()\nwg.Wait()"
  },
  {
    "day": "34",
    "theme": "Mutex и блокировка",
    "task": "Работать с конкурентным доступом к данным",
    "resources": "<a href='https://pkg.go.dev/sync#Mutex' target='_blank'>sync.Mutex</a>",
    "example": "var mu sync.Mutex\nmu.Lock()\ndata.Counter++\nmu.Unlock()"
  },
  {
    "day": "35",
    "theme": "Context и отмена операций",
    "task": "Использовать context.Context в HTTP и горутинах",
    "resources": "<a href='https://pkg.go.dev/context' target='_blank'>context</a>",
    "example": "ctx, cancel := context.WithCancel(context.Background())\ncancel()"
  },
  {
    "day": "36",
    "theme": "Работа с Gorilla Mux",
    "task": "Использовать маршрутизатор Gorilla Mux",
    "resources": "<a href='https://github.com/gorilla/mux' target='_blank'>Gorilla Mux</a>",
    "example": "router := mux.NewRouter()\nrouter.HandleFunc(\"/users/{id}\", getUser)"
  },
  {
    "day": "37",
    "theme": "Работа с Echo Framework",
    "task": "Создать сервер на легковесном фреймворке",
    "resources": "<a href='https://echo.labstack.com/' target='_blank'>Echo Framework</a>",
    "example": "e := echo.New()\ne.GET(\"/\", func(c echo.Context) error { return c.String(http.StatusOK, \"Hello\") })"
  },
  {
    "day": "38",
    "theme": "Шаблоны и HTML-рендеринг",
    "task": "Использовать html/template для генерации HTML",
    "resources": "<a href='https://pkg.go.dev/html/template' target='_blank'>html/template</a>",
    "example": "tmpl, _ := template.ParseFiles(\"template.html\")\ntmpl.Execute(w, data)"
  },
  {
    "day": "39",
    "theme": "Forms и обработка ввода",
    "task": "Обрабатывать формы и POST-запросы",
    "resources": "<a href='https://pkg.go.dev/net/http#Request.ParseForm' target='_blank'>ParseForm</a>",
    "example": "r.ParseForm()\nusername := r.FormValue(\"username\")"
  },
  {
    "day": "40",
    "theme": "Работа с куками и сессиями",
    "task": "Устанавливать и читать cookies",
    "resources": "<a href='https://pkg.go.dev/net/http#Cookie' target='_blank'>Cookies</a>",
    "example": "http.SetCookie(w, &http.Cookie{Name: \"auth\", Value: \"token\"})"
  },
  {
    "day": "41",
    "theme": "Работа с gorilla/sessions",
    "task": "Добавить поддержку сессий в приложение",
    "resources": "<a href='https://github.com/gorilla/sessions' target='_blank'>gorilla/sessions</a>",
    "example": "session, _ := store.Get(r, \"session-name\")\nsession.Values[\"user\"] = \"Alice\""
  },
  {
    "day": "42",
    "theme": "Работа с gorilla/mux: параметры, маршруты",
    "task": "Работать с параметрами маршрутов",
    "resources": "<a href='https://github.com/gorilla/mux' target='_blank'>Mux Router</a>",
    "example": "vars := mux.Vars(r)\nid := vars[\"id\"]"
  },
  {
    "day": "43",
    "theme": "Работа с Gorilla Websocket",
    "task": "Создать WebSocket сервер и клиент",
    "resources": "<a href='https://github.com/gorilla/websocket' target='_blank'>WebSockets</a>",
    "example": "conn, _ := upgrader.Upgrade(w, r, nil)\ngo func() { conn.WriteMessage(websocket.TextMessage, []byte(\"Hello\")) }()"
  },
  {
    "day": "44",
    "theme": "Работа с ORM (например, GORM)",
    "task": "Использовать GORM для работы с БД",
    "resources": "<a href='https://gorm.io/docs/' target='_blank'>GORM</a>",
    "example": "db.First(&user, 1)\ndb.Create(&User{...})"
  },
  {
    "day": "45",
    "theme": "Migrations и модели",
    "task": "Создавать миграции и работать с моделями",
    "resources": "<a href='https://gorm.io/docs/migration.html' target='_blank'>GORM Migrations</a>",
    "example": "db.AutoMigrate(&User{})"
  },
  {
    "day": "46",
    "theme": "Работа с Gin Framework",
    "task": "Создать сервер на Gin",
    "resources": "<a href='https://gin-gonic.com/docs/' target='_blank'>Gin Framework</a>",
    "example": "r := gin.Default()\nr.GET(\"/\", func(c *gin.Context) { c.JSON(200, gin.H{\"status\": \"ok\"}) })"
  },
  {
    "day": "47",
    "theme": "Работа с gRPC",
    "task": "Создать gRPC сервер и клиент",
    "resources": "<a href='https://grpc.io/docs/languages/go/basics/' target='_blank'>gRPC</a>",
    "example": "service \"myapp\" {\n  rpc SayHello (HelloRequest) returns (HelloResponse);\n}"
  },
  {
    "day": "48",
    "theme": "Работа с Protobuf",
    "task": "Использовать Protobuf для сериализации",
    "resources": "<a href='https://protobuf.dev/programming-guides/proto3/' target='_blank'>Protobuf</a>",
    "example": "message Person { string name = 1; int32 id = 2; }"
  },
  {
    "day": "49",
    "theme": "Работа с JSON и XML",
    "task": "Кодировать/декодировать JSON и XML",
    "resources": "<a href='https://pkg.go.dev/encoding/xml' target='_blank'>XML</a>",
    "example": "xmlData, _ := xml.Marshal(data)"
  },
  {
    "day": "50",
    "theme": "Работа с Gorilla Schema",
    "task": "Привязка формы к структуре",
    "resources": "<a href='https://github.com/gorilla/schema' target='_blank'>Gorilla Schema</a>",
    "example": "decoder := schema.NewDecoder()\n_ = decoder.Decode(&struct{}, r.Form)"
  },
  {
    "day": "51",
    "theme": "Работа с Gorilla Pat",
    "task": "Использовать маршрутизатор Pat",
    "resources": "<a href='https://github.com/bmizerany/pat' target='_blank'>Pat Router</a>",
    "example": "p := pat.New()\np.Get(\"/users/{id}\", userHandler)"
  },
  {
    "day": "52",
    "theme": "Работа с Gorilla Context",
    "task": "Хранить данные в контексте запроса",
    "resources": "<a href='https://github.com/gorilla/context' target='_blank'>Gorilla Context</a>",
    "example": "context.Set(r, \"user\", user)\nuser := context.Get(r, \"user\")"
  },
  {
    "day": "53",
    "theme": "Работа с JWT",
    "task": "Генерировать и проверять JWT-токены",
    "resources": "<a href='https://pkg.go.dev/github.com/dgrijalva/jwt-go' target='_blank'>JWT-Go</a>",
    "example": "token := jwt.New(jwt.SigningMethodHS256)\nsignedToken, _ := token.SignedString(mySigningKey)"
  },
  {
    "day": "54",
    "theme": "Работа с PostgreSQL",
    "task": "Подключиться к PostgreSQL и выполнять запросы",
    "resources": "<a href='https://github.com/jackc/pgx' target='_blank'>PGX</a>",
    "example": "conn, _ := pgx.Connect(context.Background(), os.Getenv(\"DATABASE_URL\"))"
  },
  {
    "day": "55",
    "theme": "Работа с MySQL",
    "task": "Работать с MySQL через Go",
    "resources": "<a href='https://github.com/go-sql-driver/mysql' target='_blank'>MySQL driver</a>",
    "example": "db, _ := sql.Open(\"mysql\", \"user:pass@tcp(localhost:3306)/dbname\")"
  },
  {
    "day": "56",
    "theme": "Работа с Redis",
    "task": "Использовать Redis как хранилище данных",
    "resources": "<a href='https://pkg.go.dev/github.com/go-redis/redis/v8' target='_blank'>Redis</a>",
    "example": "client := redis.NewClient(&redis.Options{Addr: \"localhost:6379\"})"
  },
  {
    "day": "57",
    "theme": "Работа с MongoDB",
    "task": "Подключиться к MongoDB и сохранять данные",
    "resources": "<a href='https://www.mongodb.com/docs/drivers/go/current/usage-examples/' target='_blank'>MongoDB Go</a>",
    "example": "client, _ := mongo.Connect(ctx, options.Client().ApplyURI(uri))"
  },
  {
    "day": "58",
    "theme": "Работа с Gorilla Toolkit",
    "task": "Использовать набор инструментов Gorilla",
    "resources": "<a href='https://github.com/gorilla' target='_blank'>Gorilla Project</a>",
    "example": "mux, handlers, securecookie, csrf"
  },
  {
    "day": "59",
    "theme": "Работа с Cobra CLI",
    "task": "Создать CLI-приложение с Cobra",
    "resources": "<a href='https://github.com/spf13/cobra' target='_blank'>Cobra CLI</a>",
    "example": "cobra.Command{Use: \"add\", Run: func(cmd *cobra.Command, args []string)}"
  },
  {
    "day": "60",
    "theme": "Работа с Viper",
    "task": "Управление конфигурацией через Viper",
    "resources": "<a href='https://github.com/spf13/viper' target='_blank'>Viper</a>",
    "example": "viper.SetConfigName(\"config\")\nviper.ReadInConfig()"
  },
  {
    "day": "61",
    "theme": "Работа с GORM: отношения",
    "task": "Создать связи между таблицами",
    "resources": "<a href='https://gorm.io/docs/' target='_blank'>GORM Relationships</a>",
    "example": "type User { ID uint; Posts []Post `gorm:\"foreignkey:UserID\"` }"
  },
  {
    "day": "62",
    "theme": "Работа с GORM: миграции",
    "task": "Автоматизировать миграции",
    "resources": "<a href='https://gorm.io/docs/migration.html' target='_blank'>GORM Migrations</a>",
    "example": "db.AutoMigrate(&User{})"
  },
  {
    "day": "63",
    "theme": "Работа с GORM: CRUD",
    "task": "Создать, прочитать, обновить, удалить записи",
    "resources": "<a href='https://gorm.io/docs/create.html' target='_blank'>GORM CRUD</a>",
    "example": "db.Create(&user)\ndb.Find(&users)\ndb.Delete(&user)"
  },
  {
    "day": "64",
    "theme": "Работа с GORM: Query",
    "task": "Фильтровать и выбирать данные",
    "resources": "<a href='https://gorm.io/docs/query.html' target='_blank'>GORM Queries</a>",
    "example": "db.Where(\"age > ?\", 30).Find(&users)"
  },
  {
    "day": "65",
    "theme": "Работа с GORM: Update",
    "task": "Обновлять записи в БД",
    "resources": "<a href='https://gorm.io/docs/update.html' target='_blank'>GORM Update</a>",
    "example": "db.Model(&user).Update(\"name\", \"Alice\")"
  },
  {
    "day": "66",
    "theme": "Работа с GORM: Delete",
    "task": "Удалять данные из БД",
    "resources": "<a href='https://gorm.io/docs/delete.html' target='_blank'>GORM Delete</a>",
    "example": "db.Delete(&user)"
  },
  {
    "day": "67",
    "theme": "Работа с GORM: Preload",
    "task": "Загружать связанные данные",
    "resources": "<a href='https://gorm.io/docs/preload.html' target='_blank'>GORM Preload</a>",
    "example": "db.Preload(\"Posts\").Find(&users)"
  },
  {
    "day": "68",
    "theme": "Работа с GORM: Joins",
    "task": "Использовать JOIN-запросы",
    "resources": "<a href='https://gorm.io/docs/advanced_query.html' target='_blank'>Joins</a>",
    "example": "db.Joins(\"JOIN emails ON emails.user_id = users.id\").Where(...)"
  },
  {
    "day": "69",
    "theme": "Работа с GORM: Transactions",
    "task": "Использовать транзакции",
    "resources": "<a href='https://gorm.io/docs/transactions.html' target='_blank'>Transactions</a>",
    "example": "db.Transaction(func(tx *gorm.DB) error { tx.Create(...) })"
  },
  {
    "day": "70",
    "theme": "Работа с GORM: Hooks",
    "task": "Использовать BeforeCreate, AfterSave и другие",
    "resources": "<a href='https://gorm.io/docs/hooks.html' target='_blank'>GORM Hooks</a>",
    "example": "func (u *User) BeforeCreate(tx *gorm.DB) error { u.CreatedAt = time.Now() }"
  },
  {
    "day": "71",
    "theme": "Работа с GORM: Raw SQL",
    "task": "Выполнять SQL-запросы напрямую",
    "resources": "<a href='https://gorm.io/docs/sql_builder.html' target='_blank'>Raw SQL</a>",
    "example": "db.Raw(\"SELECT * FROM users\").Scan(&users)"
  },
  {
    "day": "72",
    "theme": "Работа с GORM: Scopes",
    "task": "Создавать переиспользуемые части запросов",
    "resources": "<a href='https://gorm.io/docs/scopes.html' target='_blank'>Scopes</a>",
    "example": "func FilterByAge(db *gorm.DB) *gorm.DB { return db.Where(\"age > 18\") }"
  },
  {
    "day": "73",
    "theme": "Работа с GORM: Indexes",
    "task": "Создавать и управлять индексами",
    "resources": "<a href='https://gorm.io/docs/indexes.html' target='_blank'>GORM Indexes</a>",
    "example": "db.Model(&User{}).AddUniqueIndex(\"idx_user_email\", \"email\")"
  },
  {
    "day": "74",
    "theme": "Работа с GORM: Optimistic Lock",
    "task": "Использовать оптимистичную блокировку",
    "resources": "<a href='https://gorm.io/docs/optimistic_locking.html' target='_blank'>Optimistic Lock</a>",
    "example": "db.Model(&user).Where(\"version = ?\", user.Version).Updates(...)"
  },
  {
    "day": "75",
    "theme": "Работа с GORM: Debug",
    "task": "Использовать режим отладки",
    "resources": "<a href='https://gorm.io/docs/debugging.html' target='_blank'>Debug mode</a>",
    "example": "db.Debug().Where(\"id = 1\").First(&user)"
  },
  {
    "day": "76",
    "theme": "Работа с GORM: Logging",
    "task": "Логировать SQL-запросы",
    "resources": "<a href='https://gorm.io/docs/logger.html' target='_blank'>GORM Logger</a>",
    "example": "newLogger := logger.New(log.New(os.Stdout, \"\\r\\n\", log.LstdFlags), logger.Config{ SlowThreshold: time.Second })"
  },
  {
    "day": "77",
    "theme": "Работа с GORM: AutoPreload",
    "task": "Настроить автоматическую загрузку связанных данных",
    "resources": "<a href='https://gorm.io/docs/preload.html' target='_blank'>AutoPreload</a>",
    "example": "db.Set(\"gorm:auto_preload\", true).Find(&users)"
  },
  {
    "day": "78",
    "theme": "Работа с GORM: Custom Types",
    "task": "Создавать собственные типы данных",
    "resources": "<a href='https://gorm.io/docs/customize_data_type.html' target='_blank'>Custom Types</a>",
    "example": "type MyInt int\nfunc (mi MyInt) GORMValue(db *gorm.DB) clause.Expr { return clause.Expr{SQL: \"?\", Vars: []interface{}{mi} } }"
  },
  {
    "day": "79",
    "theme": "Работа с GORM: Composite Primary Key",
    "task": "Создавать составные первичные ключи",
    "resources": "<a href='https://gorm.io/docs/composite_primary_key.html' target='_blank'>Composite Keys</a>",
    "example": "type UserRole struct { UserID uint `gorm:\"primaryKey\"`\nRoleID uint `gorm:\"primaryKey\"` }"
  },
  {
    "day": "80",
    "theme": "Работа с GORM: Soft Delete",
    "task": "Использовать мягкое удаление",
    "resources": "<a href='https://gorm.io/docs/delete.html#Soft-Delete' target='_blank'>Soft Delete</a>",
    "example": "type User struct { gorm.Model }"
  },
  {
    "day": "81",
    "theme": "Работа с GORM: Tagging",
    "task": "Использовать теги в структурах",
    "resources": "<a href='https://gorm.io/docs/models.html#tags' target='_blank'>Model Tags</a>",
    "example": "type User struct { Name string `gorm:\"size:64\"` }"
  },
  {
    "day": "82",
    "theme": "Работа с GORM: Many to Many",
    "task": "Создавать связи many-to-many",
    "resources": "<a href='https://gorm.io/docs/many_to_many.html' target='_blank'>ManyToMany</a>",
    "example": "type User struct { gorm.Model\nRoles []Role `gorm:\"many2many:user_roles;\"` }"
  },
  {
    "day": "83",
    "theme": "Работа с GORM: One To One",
    "task": "Создавать one-to-one связи",
    "resources": "<a href='https://gorm.io/docs/has_one.html' target='_blank'>HasOne</a>",
    "example": "type User struct { gorm.Model\nProfile Profile }"
  },
  {
    "day": "84",
    "theme": "Работа с GORM: One To Many",
    "task": "Создавать one-to-many связи",
    "resources": "<a href='https://gorm.io/docs/has_many.html' target='_blank'>HasMany</a>",
    "example": "type User struct { gorm.Model\nPosts []Post }"
  },
  {
    "day": "85",
    "theme": "Работа с GORM: Belongs To",
    "task": "Создавать связи belongs-to",
    "resources": "<a href='https://gorm.io/docs/belongs_to.html' target='_blank'>BelongsTo</a>",
    "example": "type Profile struct { gorm.Model\nUserID uint\nUser User `gorm:\"foreignKey"
  },
  {
    "day": "86",
    "theme": "Работа с GORM: Many to Many",
    "task": "Создавать many-to-many связи",
    "resources": "<a href='https://gorm.io/docs/many_to_many.html' target='_blank'>ManyToMany</a>",
    "example": "type User struct {\n    gorm.Model\n    Roles []Role `gorm:\"many2many:user_roles;\"`\n}"
  },
  {
    "day": "87",
    "theme": "Работа с GORM: Transactions",
    "task": "Использовать транзакции",
    "resources": "<a href='https://gorm.io/docs/transactions.html' target='_blank'>Transactions</a>",
    "example": "db.Transaction(func(tx *gorm.DB) error {\ntx.Create(...)\ntx.Save(...)\nreturn nil\n})"
  },
  {
    "day": "88",
    "theme": "Работа с GORM: Raw SQL",
    "task": "Выполнять SQL-запросы напрямую",
    "resources": "<a href='https://gorm.io/docs/sql_builder.html' target='_blank'>Raw SQL</a>",
    "example": "db.Raw(\"SELECT * FROM users\").Scan(&users)"
  },
  {
    "day": "89",
    "theme": "Мини-проект: CLI приложение на Go",
    "task": "Создать консольное приложение с Cobra",
    "resources": "-",
    "example": "-"
  },
  {
    "day": "90",
    "theme": "Финальный проект: REST API сервер",
    "task": "Создать полноценный REST API сервер с CRUD, JWT, базой данных",
    "resources": "-",
    "example": "-"
  }
]
